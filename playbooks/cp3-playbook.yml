- hosts: all # all hosts ansible knows about #middle-tier #apply the contents of this playbook to all hosts matching the label
  become: yes  
  become_method: sudo
  vars: 
    ansible_python_interpreter: /usr/bin/python3
    repository_url: https://github.com/mirr254/Bright-Events.git
    repository_path: /var/www/bright-events/
  tasks:
    - name: Installing packages
      apt: update_cache=yes name={{ item }} state=present #tell apt to install a set of packages
      with_items:
        - git
        - python3-pip
        - nginx

    - name: set and generate locale #needed for ubuntu 16.0.4 server to work correctly when installing packages
      shell: | 
        export LANGUAGE=en_US.UTF-8 
        export LANG=en_US.UTF-8 
        export LC_ALL=en_US.UTF-8 


    #nginx role here

    #set up environment variables and make the file exutable
    #files put in /etc/profile.d are executed when a user logs in
    - name: set up environment variables
      shell:
        creates: .env
        cmd: |
          bash -c 'cat > /etc/profile.d/set_api_env_vars.sh << EOF
            export APP_MAIL_PASSWORD=rqwglstgmuviflkw
            export APP_MAIL_USERNAME=sammysteppa90@gmail.com
            export APP_SETTINGS=production
            export SECRET_KEY=this is suoer scret key
            export SECURITY_PASSWORD_RESET_SALT=securiyt password r3set
            export SECURITY_PASSWORD_SALT=securiyt password s2lt
            export DATABASE_URL=postgresql://postgres:postgres@localhost:5433/bright-events
            export RDS_USERNAME=shammir_devops
            export RDS_PASSWORD=shammir_devops
            export RDS_HOSTNAME=brighteventsapi.clxcu0rn7s4l.us-east-2.rds.amazonaws.com
            export RDS_DB_NAME=brighteventsapi
            export RDS_PORT=5432
          EOF'
          chmod +x /etc/profile.d/set_api_env_vars.sh 

    #use git to clone our repo in the dir we chose
    - name: git clone the repo
      git: repo='{{ repository_url }}' dest='{{ repository_path }}/Bright-Events' 

    #run the command to install virtual environment
    - name: install virtualenv
      command: pip3 install virtualenv

    - name: create virtualenv in project dir path 
      command: virtualenv {{repository_path}}/venv-api

    - name: activate virtualenv and install requirements
      pip:
        requirements: '{{repository_path}}/Bright-Events/requirements.txt'
        virtualenv: '{{repository_path}}/venv-api'
        
    #create a script to handle database setup and configuration
    # and make the file executable
    - name: setting up database initialization, migration and upgrades
      shell: |
        bash -c 'cat > /home/ubuntu/stup_db.sh << EOF
          #!/bin/bash
          source /etc/profile.d/set_api_env_vars.sh
          source /var/www/bright-events/venv-api/bin/activate
          cd /var/www/bright-events/Bright-Events
          if [[ -d ./migrations ]]; then
            python manage.py db migrate
            python manage.py db upgrade
          else
            python manage.py db init
            python manage.py db migrate
            python manage.py db upgrade
          fi
          deactivate
        EOF'
        bash -c 'cat > /etc/profile.d/stup_db.sh << EOF
          sudo bash /home/ubuntu/stup_db.sh
        EOF'
        chmod +x /etc/profile.d/stup_db.sh
        chmod +x /home/ubuntu/stup_db.sh